[
{
	"uri": "https://docs.lunchbadger.com/basics/entity-palette/api-endpoints/",
	"title": "API Endpoints",
	"tags": [],
	"description": "",
	"content": "Used as Express Gateway API Endpoints for clients connecting to Gateway Entities.\n"
},
{
	"uri": "https://docs.lunchbadger.com/basics/entity-palette/gateways/",
	"title": "Gateways",
	"tags": [],
	"description": "",
	"content": " Clicking this icon creates a new Gateway Entity on the canvas with a corresponding Gateway Deployment running in Kubernetes.\nExample:\nEach Gateway consists of one or more Pipelines. Model, Service Endpoint, and Function Entities can all be connected to the left-hand side of a Pipeline. API Endpoint Entities connect to the right-hand side of a Pipeline.\nPipelines contain a list of Policies. Policies contain a list of condition-action pairs.\nExample:\nMore details on available conditions and policies can be found in the Express Gateway Documentation.\nAccessing Gateway Instances All gateways will be accessible via the following domain name pattern:\nhttp://{gateway-name}-{user-id}-dev.lunchbadger.io\nFor example, if your gateway is named \u0026ldquo;Gateway\u0026rdquo; and your User ID is \u0026ldquo;999\u0026rdquo;, your gateway will be accessible at:\nhttp://gateway-999-dev.lunchbadger.io\nConsumer Management Note: This feature is currently on staging for testing and will be in production soon.\nAll Gateway Entities contain an icon for accessing Consumer Management.\n"
},
{
	"uri": "https://docs.lunchbadger.com/basics/entity-palette/data-sources/",
	"title": "Data Sources",
	"tags": [],
	"description": "",
	"content": "Each data source entity will come with its own set of properties specific for that type of connection.\nThese entities correspond with a matching data source connector that can be used with your underlying Loopback project.\n Memory REST SOAP MongoDB Redis MySQL PostgreSQL Etherum Salesforce Triton Object Storage  "
},
{
	"uri": "https://docs.lunchbadger.com/basics/entity-palette/functions/",
	"title": "Functions",
	"tags": [],
	"description": "",
	"content": "Function Entities A function entity represents a serverless function that runs in your Kubernetes cluster. LunchBadger includes a built-in editor.\nExample:\n"
},
{
	"uri": "https://docs.lunchbadger.com/basics/entity-palette/models/",
	"title": "Models",
	"tags": [],
	"description": "",
	"content": "Model Entity represent a visual interface on top of a Loopback Model. Here, you can add properties you\u0026rsquo;d like to expose from your Data Source through your API Endpoint.\nExample:\n"
},
{
	"uri": "https://docs.lunchbadger.com/basics/canvas/",
	"title": "Canvas",
	"tags": [],
	"description": "",
	"content": " The LunchBadger platform Canvas is a single pane of glass where you can design, build and create your microservices and APIs.\n TODO: INSERT BIG CANVAS IMAGE The Canvas is divided into the following columns: Backend: TODO: Describe Private: TODO: Describe Gateway: TODO: Describe Public: TODO: Describe From here you will navigate to the Entity Palette on the left to choose which Entities you would like to add to the Canvas.\n\u0026lt;\u0026mdash; Each of these icons need to be explained.\n"
},
{
	"uri": "https://docs.lunchbadger.com/basics/entity-palette/",
	"title": "Entity Palette",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.lunchbadger.com/basics/",
	"title": "Basics",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.lunchbadger.com/demo/",
	"title": "Demo",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.lunchbadger.com/about/",
	"title": "About",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.lunchbadger.com/",
	"title": "HOME",
	"tags": [],
	"description": "",
	"content": " LunchBadger Documentation Welcome to LunchBadger! Documentation for LunchBadger is provided on [name platform or how it is written. Ex. “written in Markdown”] or sign up for a private demo.\nOpen Source Technology Used in LunchBadger LunchBadger Canvas Objects are wired into elements of open source software. Source-level access to these components provides opportunities in portability and environment-specific testing. Here are some projects used behind the scenes and integrated into LunchBadger:\n Express Gateway - Provides advanced gateway features using Service Endpoint, Gateway, and API Endpoint Objects. Loopback - Provides features of Data Source and Model Objects. Kubernetes - Provides advanced container orchestration. Serverless - Acts as an adapter for Function-as-a-Service (FaaS) platforms. Kubeless - A FaaS solution that\u0026rsquo;s native to Kubernetes. This project powers LunchBadger\u0026rsquo;s out-of-the-box serverless platform.  Interested in our open source project, Express Gateway? If you’d like to contribute, please see our Github website repo or you can join our Community on Gitter. [Commercial Support options are also available for Express Gateway. ] [ Link to support page when ready]\nNeed Support? Now that you\u0026rsquo;re armed with the basics of how to use LunchBadger, have fun! Feel free to play around with Entities on the Canvas and direct any questions to your LunchBadger Support Team at hello@lunchbadger.com.\n"
},
{
	"uri": "https://docs.lunchbadger.com/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.lunchbadger.com/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]