<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on Express Serverless Platform</title>
    <link>https://www.express-serverless.io/tags/kubernetes/</link>
    <description>Recent content in Kubernetes on Express Serverless Platform</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 09 Oct 2018 00:12:30 +0000</lastBuildDate>
    
	<atom:link href="https://www.express-serverless.io/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building Serverless Based Functions</title>
      <link>https://www.express-serverless.io/blog/serverless-based-functions/</link>
      <pubDate>Tue, 07 Aug 2018 02:50:41 +0000</pubDate>
      
      <guid>https://www.express-serverless.io/blog/serverless-based-functions/</guid>
      <description>Fired up! Ready to go! You’ve heard every buzzword. Microservices, APIs, Kubernetes and serverless just to name a few catchy ones. Let’s get real for a moment and acknowledge that these are just fancy words for the work that you and your team are doing day in and day out. What if there was a way to do this work that was less painful? Less frustrating?
&amp;nbsp;
Using Express Serverless Platform, we believe in the power of developers.</description>
    </item>
    
    <item>
      <title>LunchBadger Platform is now Express Serverless Platform</title>
      <link>https://www.express-serverless.io/blog/express-serverless-platform-lunchbadger/</link>
      <pubDate>Tue, 09 Oct 2018 00:12:30 +0000</pubDate>
      
      <guid>https://www.express-serverless.io/blog/express-serverless-platform-lunchbadger/</guid>
      <description>Express Serverless Platform has arrived! After three long months of hard work, we&amp;#8217;re proud to announce that the LunchBadger Platform is now the Express Serverless Platform. New name, new features and an opportunity to experience a visual canvas ripe with all the important functionality that developers need, without the hype.
&amp;nbsp;
TLDR: Install ESP right over here
&amp;nbsp;
For Developers, DevOps teams and CTOs driving impact in top companies, it&amp;#8217;s not just a name change &amp;#8211; it&amp;#8217;s a game changer and we can&amp;#8217;t wait to show you why.</description>
    </item>
    
    <item>
      <title>Leveraging Kubernetes For Microservices Based Cloud Strategy</title>
      <link>https://www.express-serverless.io/blog/kubernetes-scalability/</link>
      <pubDate>Mon, 13 Aug 2018 19:26:15 +0000</pubDate>
      
      <guid>https://www.express-serverless.io/blog/kubernetes-scalability/</guid>
      <description>Enterprise applications have to be designed upfront for scalability and change. This has significant implications for both application architecture and application infrastructure. Application architecture is evolving from unmanageable monolithic or three-tier patterns to interconnected microservices. Microservices introduce new form factors not only for functionality and team-size (the so-called two-pizza teams), but also for the unit of infrastructure. It is not surprising that a portable container or a pod of handful interrelated containers often works out as the most befitting unit of infrastructure for microservices-based architecture.</description>
    </item>
    
    <item>
      <title>Kubernetes for API and Microservice Orchestration</title>
      <link>https://www.express-serverless.io/blog/kubernetes-for-api-and-microservice-orchestration/</link>
      <pubDate>Tue, 25 Oct 2016 16:51:20 +0000</pubDate>
      
      <guid>https://www.express-serverless.io/blog/kubernetes-for-api-and-microservice-orchestration/</guid>
      <description>Two weeks ago, we talked about the benefits that Docker brings to organizations building out an API infrastruture. Last week, we went one level higher to look at how container orchestrators promise to simplify the deployment and management of applications and APIs. This week, I&amp;#8217;ll describe a more personal perspective &amp;#8211; why we chose Kubernetes as our container orchestrator.
The decision came down to three major reasons: community, ease of use, and feature set.</description>
    </item>
    
  </channel>
</rss>