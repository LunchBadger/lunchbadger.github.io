<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Comparisons on Express Serverless Platform</title>
    <link>https://www.express-serverless.io/comparisons/</link>
    <description>Recent content in Comparisons on Express Serverless Platform</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 May 2018 18:23:50 +0300</lastBuildDate>
    
	<atom:link href="https://www.express-serverless.io/comparisons/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ESP vs AWS Lambda</title>
      <link>https://www.express-serverless.io/blog/microservices-platform-comparison-express-serverless-on-aws-vs-lambda/</link>
      <pubDate>Thu, 29 Nov 2018 01:08:42 +0000</pubDate>
      
      <guid>https://www.express-serverless.io/blog/microservices-platform-comparison-express-serverless-on-aws-vs-lambda/</guid>
      <description>Developer Challenges of Serverless and AWS AWS pioneered the idea behind serverless when they introduced AWS Lambda: focus on your business logic down to its atomic parts of your applications—functions—and let them worry about the rest. This whole idea eventually led to the NoOps movement.
&amp;nbsp;
Serverless is a great idea! It&amp;#8217;s a new paradigm that can be applied to how modern applications are developed and run in the cloud to drastically increase developer focus and productivity.</description>
    </item>
    
    <item>
      <title>ESP vs Google Cloud Functions</title>
      <link>https://www.express-serverless.io/blog/hello-world-esp-vs-google-cloud-functions-example/</link>
      <pubDate>Tue, 01 May 2018 17:04:42 +0000</pubDate>
      
      <guid>https://www.express-serverless.io/blog/hello-world-esp-vs-google-cloud-functions-example/</guid>
      <description>Google Cloud Functions are Google Cloud&amp;#8217;s equivalent to AWS Lambda. Like Lambda, Google Cloud Functions let you write custom functions and expose them via an HTTP interface through either Google Cloud Function&amp;#8217;s minimal HTTP configuration or Google Cloud Endpoints for more sophisticated use cases. Express Serverless Platfom is a similar stack that lets you write Node.js APIs and expose those APIs through Express Gateway without vendor lock in. In this article, I&amp;#8217;ll walk through setting up a rudimentary Node.</description>
    </item>
    
    <item>
      <title>ESP vs Azure Functions</title>
      <link>https://www.express-serverless.io/blog/get-started-azure-functions-vs-express-serverless-platform-tutorial/</link>
      <pubDate>Thu, 22 Mar 2018 22:38:26 +0000</pubDate>
      
      <guid>https://www.express-serverless.io/blog/get-started-azure-functions-vs-express-serverless-platform-tutorial/</guid>
      <description>If you&amp;#8217;re looking at getting started with Azure, we&amp;#8217;ve put together a comprehensive &amp;#8220;Hello, World&amp;#8217; guide. In addition to Azure, we&amp;#8217;ve put together a no-frills comparison of the getting started experience from the developer perspective. Learn more, build more and check out the latest from Val Karpov in this latest installment of our Developer Spotlight Series.
Azure Functions are Microsoft Azure&amp;#8217;s equivalent to AWS Lambda. Like Lambda, Azure Functions let you write custom functions and expose them via an HTTP interface using Azure API Management.</description>
    </item>
    
    <item>
      <title>ESP vs IBM Cloud Functions</title>
      <link>https://www.express-serverless.io/blog/hello-world-esp-vs-ibm-cloud-functions-example/</link>
      <pubDate>Tue, 03 Apr 2018 12:31:41 +0000</pubDate>
      
      <guid>https://www.express-serverless.io/blog/hello-world-esp-vs-ibm-cloud-functions-example/</guid>
      <description>IBM Cloud Functions are IBM Cloud&amp;#8217;s equivalent to AWS Lambda. Like Lambda, IBM Cloud Functions let you write custom functions and expose them via an HTTP interface through either IBM Cloud Function&amp;#8217;s minimal HTTP configuration or IBM API Connect for more sophisticated use cases. Express Serverless Platform offers a similar stack that lets you write Node.js APIs and expose those APIs through Express Gateway without vendor lock in. In this article, I&amp;#8217;ll walk through setting up a rudimentary Node.</description>
    </item>
    
    <item>
      <title>Hello World with Express Serverless Platform vs Apigee Edge</title>
      <link>https://www.express-serverless.io/blog/vs-apigee-features/</link>
      <pubDate>Thu, 15 Mar 2018 13:00:05 +0000</pubDate>
      
      <guid>https://www.express-serverless.io/blog/vs-apigee-features/</guid>
      <description>Apigee Edge (acquired by Google in 2016) is a popular platform for deploying API proxies. Express Serverless Platform, like Apigee, allows you to build and deploy API gateways on their internal cloud computing service. At a high level, Express Serverless Platform and Apigee are similar, but there are several key differences in terms of Node.js version compatibility and vendor lock-in that you should be aware of before choosing one or the other.</description>
    </item>
    
  </channel>
</rss>